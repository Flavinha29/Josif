# Generated by Django 5.2.4 on 2025-07-19 14:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='GeneroLiterario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Gênero (ex: Aventura, Mistério)')),
            ],
            options={
                'verbose_name': 'Gênero Literário',
                'verbose_name_plural': 'Gêneros Literários',
            },
        ),
        migrations.CreateModel(
            name='Ocupacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Ocupação (ex: Professor, Estudante)')),
            ],
            options={
                'verbose_name': 'Ocupação',
                'verbose_name_plural': 'Ocupações',
            },
        ),
        migrations.CreateModel(
            name='Recompensa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da recompensa')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('pontos_necessarios', models.IntegerField(verbose_name='Pontos necessários')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='recompensas/', verbose_name='Imagem')),
            ],
            options={
                'verbose_name': 'Recompensa',
                'verbose_name_plural': 'Recompensas',
            },
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da escola')),
                ('endereco', models.CharField(max_length=200, verbose_name='Endereço')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.cidade', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'Escola',
                'verbose_name_plural': 'Escolas',
            },
        ),
        migrations.CreateModel(
            name='Livro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('autor', models.CharField(max_length=100, verbose_name='Autor')),
                ('faixa_etaria', models.CharField(max_length=20, verbose_name='Faixa etária')),
                ('paginas', models.IntegerField(verbose_name='Número de páginas')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('genero', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.generoliterario', verbose_name='Gênero')),
            ],
            options={
                'verbose_name': 'Livro',
                'verbose_name_plural': 'Livros',
            },
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('pontos_leitura', models.IntegerField(default=0, verbose_name='Pontos acumulados')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('escola', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.escola', verbose_name='Escola')),
                ('ocupacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ocupacao', verbose_name='Ocupação')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProgressoLeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('L', 'Lendo'), ('C', 'Concluído')], max_length=1, verbose_name='Status')),
                ('data_inicio', models.DateField(verbose_name='Data de início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de conclusão')),
                ('estudante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Estudante')),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.livro', verbose_name='Livro')),
            ],
            options={
                'verbose_name': 'Progresso de Leitura',
                'verbose_name_plural': 'Progressos de Leitura',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome da turma')),
                ('ano_escolar', models.CharField(max_length=10, verbose_name='Ano escolar (6º ao 9º)')),
                ('turno', models.CharField(choices=[('M', 'Matutino'), ('V', 'Vespertino')], max_length=1, verbose_name='Turno')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.escola', verbose_name='Escola')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
            },
        ),
        migrations.CreateModel(
            name='RankingLeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontos_totais', models.IntegerField(verbose_name='Pontos totais')),
                ('periodo', models.CharField(choices=[('M', 'Mensal'), ('A', 'Anual')], max_length=1, verbose_name='Período')),
                ('estudante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Estudante')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma', verbose_name='Turma')),
            ],
            options={
                'verbose_name': 'Ranking de Leitura',
                'verbose_name_plural': 'Rankings de Leitura',
            },
        ),
        migrations.CreateModel(
            name='DesafioLeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_inicio', models.DateField(verbose_name='Data de início')),
                ('data_fim', models.DateField(verbose_name='Data de término')),
                ('livros', models.ManyToManyField(to='app.livro', verbose_name='Livros do desafio')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma', verbose_name='Turma')),
            ],
            options={
                'verbose_name': 'Desafio de Leitura',
                'verbose_name_plural': 'Desafios de Leitura',
            },
        ),
        migrations.AddField(
            model_name='pessoa',
            name='turma',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.turma', verbose_name='Turma'),
        ),
    ]
